{{- if .Values.jellyfin.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.jellyfin.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    spec:
    {{- if .Values.jellyfin.enableDLNA }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
    {{- end }}
    {{- if and .Values.jellyfin.tailscale.enabled .Values.jellyfin.tailscale.sidecar.enabled }}
      serviceAccountName: jellyfin-tailscale
    {{- end }}
      runtimeClassName: nvidia
      containers:
    {{- if and .Values.jellyfin.tailscale.enabled .Values.jellyfin.tailscale.sidecar.enabled }}
        - name: tailscale-sidecar
          image: ghcr.io/tailscale/tailscale:latest
          env:
            - name: TS_KUBE_SECRET
              value: {{ .Values.jellyfin.tailscale.sidecar.existingAuthSecret | default "tailscale-auth-secret" }}
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.jellyfin.tailscale.sidecar.existingAuthSecret | default "tailscale-auth-secret" }}
                  key: TS_AUTHKEY
            - name: TS_USERSPACE
              value: "false"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
    {{- end }}
        - name: {{ .Release.Name }}
          image: "{{ .Values.jellyfin.image.repository }}:{{ .Values.jellyfin.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.jellyfin.image.pullPolicy }}
        {{ if .Values.jellyfin.extraEnvVars }}
          env:
            {{- toYaml .Values.jellyfin.extraEnvVars | nindent 12 }}
        {{- end }}
        {{ if .Values.jellyfin.securityContext }}
          securityContext:
            {{- toYaml .Values.jellyfin.securityContext | nindent 12 }}
        {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.jellyfin.service.port }}
              protocol: TCP
          {{ if .Values.jellyfin.enableDLNA }}
            - name: dlna
              containerPort: 1900
              hostPort: 1900
              protocol: UDP
          {{- end }}
        {{ if .Values.jellyfin.livenessProbe.enabled }}
          livenessProbe:
          {{ if .Values.jellyfin.livenessProbe.initialDelaySeconds }}
            initialDelaySeconds: {{ .Values.jellyfin.livenessProbe.initialDelaySeconds }}
          {{- end }}
          {{ if .Values.jellyfin.livenessProbe.periodSeconds }}
            periodSeconds: {{ .Values.jellyfin.livenessProbe.periodSeconds }}
          {{- end }}
          {{ if .Values.jellyfin.livenessProbe.timeoutSeconds }}
            timeoutSeconds: {{ .Values.jellyfin.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{ if .Values.jellyfin.livenessProbe.failureThreshold }}
            failureThreshold: {{ .Values.jellyfin.livenessProbe.failureThreshold }}
          {{- end }}
          {{ if .Values.jellyfin.livenessProbe.successThreshold }}
            successThreshold: {{ .Values.jellyfin.livenessProbe.successThreshold }}
          {{- end }}
            tcpSocket:
              port: http
        {{- end }}
        {{ if .Values.jellyfin.readinessProbe.enabled }}
          readinessProbe:
          {{ if .Values.jellyfin.readinessProbe.initialDelaySeconds }}
            initialDelaySeconds: {{ .Values.jellyfin.readinessProbe.initialDelaySeconds }}
          {{- end }}
          {{ if .Values.jellyfin.readinessProbe.periodSeconds }}
            periodSeconds: {{ .Values.jellyfin.readinessProbe.periodSeconds }}
          {{- end }}
          {{ if .Values.jellyfin.readinessProbe.timeoutSeconds }}
            timeoutSeconds: {{ .Values.jellyfin.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{ if .Values.jellyfin.readinessProbe.failureThreshold }}
            failureThreshold: {{ .Values.jellyfin.readinessProbe.failureThreshold }}
          {{- end }}
          {{ if .Values.jellyfin.readinessProbe.successThreshold }}
            successThreshold: {{ .Values.jellyfin.readinessProbe.successThreshold }}
          {{- end }}
            tcpSocket:
              port: http
        {{- end }}
          volumeMounts:
            - mountPath: /config
              name: config
            {{- if .Values.jellyfin.persistence.config.subPath }}
              subPath: {{ .Values.jellyfin.persistence.config.subPath }}
            {{- end }}
            {{- range .Values.jellyfin.persistence.extraExistingClaimMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- if .Values.jellyfin.extraVolumeMounts }}
            {{- toYaml .Values.jellyfin.extraVolumeMounts | nindent 12 }}
            {{- end }}
            {{- if and .Values.sonarr.enabled .Values.sonarr.persistence.enabled }}
            - mountPath: "/media/{{ .Values.sonarr.persistence.path }}"
              name: media
              subPath: {{ .Values.sonarr.persistence.path }}
            {{- end }}
            {{- if and .Values.radarr.enabled .Values.radarr.persistence.enabled }}
            - mountPath: "/media/{{ .Values.radarr.persistence.path }}"
              name: media
              subPath: {{ .Values.radarr.persistence.path }}
            {{- end }}
            {{- if and .Values.lidarr.enabled .Values.lidarr.persistence.enabled }}
            - mountPath: "/media/{{ .Values.lidarr.persistence.path }}"
              name: media
              subPath: {{ .Values.lidarr.persistence.path }}
            {{- end }}
            {{- if and .Values.readarr.enabled .Values.readarr.persistence.enabled }}
            - mountPath: "/media/{{ .Values.readarr.persistence.path }}"
              name: media
              subPath: {{ .Values.readarr.persistence.path }}
            {{- end }}
            {{- if and .Values.sonarr.enabled .Values.sonarr.persistence.enabled }}
            - mountPath: "/media2/{{ .Values.sonarr.persistence.path }}"
              name: media2
              subPath: {{ .Values.sonarr.persistence.path }}
            {{- end }}
            {{- if and .Values.radarr.enabled .Values.radarr.persistence.enabled }}
            - mountPath: "/media2/{{ .Values.radarr.persistence.path }}"
              name: media2
              subPath: {{ .Values.radarr.persistence.path }}
            {{- end }}
            {{- if and .Values.lidarr.enabled .Values.lidarr.persistence.enabled }}
            - mountPath: "/media2/{{ .Values.lidarr.persistence.path }}"
              name: media2
              subPath: {{ .Values.lidarr.persistence.path }}
            {{- end }}
            {{- if and .Values.readarr.enabled .Values.readarr.persistence.enabled }}
            - mountPath: "/media2/{{ .Values.readarr.persistence.path }}"
              name: media2
              subPath: {{ .Values.readarr.persistence.path }}
            {{- end }}
          {{- if .Values.jellyfin.extraContainers }}
          {{- toYaml .Values.jellyfin.extraContainers | nindent 8 }}
          {{- end }}
          resources:
{{ toYaml .Values.jellyfin.resources | indent 12 }}
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext: {{- toYaml .Values.jellyfin.securityContext | nindent 12 }}
  {{- if .Values.jellyfin.extraInitContainers }}
      initContainers:
      {{- toYaml .Values.jellyfin.extraInitContainers | nindent 10 }}
  {{- end }}
      volumes:
      - name: config
      {{- if .Values.jellyfin.persistence.config.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.jellyfin.persistence.config.existingClaim }}{{ .Values.jellyfin.persistence.config.existingClaim }}{{- else }}{{ .Release.Name }}-jellyfin-config{{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: media
      {{- if .Values.jellyfin.persistence.media.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.jellyfin.persistence.media.existingClaim }}{{ .Values.jellyfin.persistence.media.existingClaim }}{{- else }}{{ .Release.Name }}-jellyfin-media{{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: media2
      {{- if .Values.jellyfin.persistence.media2.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.jellyfin.persistence.media2.existingClaim }}{{ .Values.jellyfin.persistence.media2.existingClaim }}{{- else }}{{ .Release.Name }}-jellyfin-media2{{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- range .Values.jellyfin.persistence.extraExistingClaimMounts }}
      - name: {{ .name }}
        persistentVolumeClaim:
          claimName: {{ .existingClaim }}
      {{- end }}
      {{- if .Values.jellyfin.extraVolumes }}
      {{- toYaml .Values.jellyfin.extraVolumes | nindent 6 }}
      {{- end }}
    {{- with .Values.jellyfin.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.jellyfin.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.jellyfin.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      securityContext: {{- toYaml .Values.jellyfin.podSecurityContext | nindent 8 }}
{{- end }}
